<?xml version="1.0" encoding="UTF-8"?>
<!-- debug:默认为false ，设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。 -->
<!-- scan:配置文件如果发生改变，将会重新加载，默认值为true； -->
<!-- scanPeriod:检测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位时毫秒，当scan为true时，这个属性生效，默认时间间隔为1min -->
<configuration scan="true" scanPeriod="30 seconds">
	<!--TODO : 子节点信息 -->

	<!-- <appender> 是 <configuration> 的子节点，是负责写日志的组件。 -->
	<!-- appender 有两个必要属性 name ，class 。name指定appender 的名称， class 指定appender的全限定名 -->
	<!-- class 包括 ：ch.qos.logback.core.ConsoleAppender / ch.qos.logback.core.FileAppender/ 
		ch.qos.logback.core.RollingFileAppender -->
	<!-- 配置控制台日志输出 -->
	<appender name="console_out" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date %level [%thread] %logger.%class{0}#%method [%file:%line] %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>

	<!-- 配置文件日期滚动日志输出 -->
	<appender name="file_out" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<prudent>true</prudent>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>log/my_export-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<maxHistory>30</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>%date %level [%thread] %logger.%class{0}#%method [%file:%line] %msg%n</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>
	
	<!-- 配置root根元素 -->
	<root level="info">
		<appender-ref ref="console_out"/>
		<appender-ref ref="file_out"/>
	</root>

</configuration>